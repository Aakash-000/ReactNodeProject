{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ReactnodeExpress\\\\projectreact\\\\src\\\\NoteForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteForm = () => {\n  _s();\n  const [noteText, setNoteText] = useState('');\n  const generateUniqueId = () => {\n    const timestamp = new Date().getTime();\n    const random = Math.random().toString(36).substring(2);\n    return `${timestamp}-${random}`;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (noteText.trim() !== '') {\n      try {\n        const id = parseInt(generateUniqueId()); // Generate a unique ID\n        const response = await axios.post('http://localhost:5000/api/notes', {\n          id,\n          text: noteText.trim(),\n          date: `${new Date().getHours() > 12 ? new Date().getHours() - 12 : new Date().getHours()}:${new Date().getMinutes()}:${new Date().getSeconds()} ${new Date().getHours() > 12 ? 'PM' : 'AM'}`.trim()\n        });\n        setNoteText('');\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      children: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteForm, \"9+grfOClzpb4jeiL3Y9ei1nfvJ8=\");\n_c = NoteForm;\nexport default NoteForm;\nvar _c;\n$RefreshReg$(_c, \"NoteForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","NoteForm","_s","noteText","setNoteText","generateUniqueId","timestamp","Date","getTime","random","Math","toString","substring","handleSubmit","e","preventDefault","trim","id","parseInt","response","post","text","date","getHours","getMinutes","getSeconds","error","console","onSubmit","children","className","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/ReactnodeExpress/projectreact/src/NoteForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst NoteForm = () => {\r\n  const [noteText, setNoteText] = useState('');\r\n\r\n  const generateUniqueId = () => {\r\n    const timestamp = new Date().getTime();\r\n    const random = Math.random().toString(36).substring(2);\r\n    return `${timestamp}-${random}`;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (noteText.trim() !== '') {\r\n      try {\r\n        const id = parseInt(generateUniqueId()); // Generate a unique ID\r\n        const response = await axios.post('http://localhost:5000/api/notes', {\r\n          id,text: noteText.trim(),\r\n          date:`${new Date().getHours() > 12 ? new Date().getHours()-12:new Date().getHours()}:${new Date().getMinutes()}:${new Date().getSeconds()} ${new Date().getHours() > 12 ? 'PM' : 'AM'}`.trim()});\r\n        setNoteText('');\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      \r\n      <button className=\"btn btn-primary\" type=\"submit\">\r\n          Add Note\r\n        </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NoteForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMQ,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IACtC,MAAMC,MAAM,GAAGC,IAAI,CAACD,MAAM,CAAC,CAAC,CAACE,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;IACtD,OAAQ,GAAEN,SAAU,IAAGG,MAAO,EAAC;EACjC,CAAC;EAED,MAAMI,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIZ,QAAQ,CAACa,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1B,IAAI;QACF,MAAMC,EAAE,GAAGC,QAAQ,CAACb,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,MAAMc,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,iCAAiC,EAAE;UACnEH,EAAE;UAACI,IAAI,EAAElB,QAAQ,CAACa,IAAI,CAAC,CAAC;UACxBM,IAAI,EAAE,GAAE,IAAIf,IAAI,CAAC,CAAC,CAACgB,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAIhB,IAAI,CAAC,CAAC,CAACgB,QAAQ,CAAC,CAAC,GAAC,EAAE,GAAC,IAAIhB,IAAI,CAAC,CAAC,CAACgB,QAAQ,CAAC,CAAE,IAAG,IAAIhB,IAAI,CAAC,CAAC,CAACiB,UAAU,CAAC,CAAE,IAAG,IAAIjB,IAAI,CAAC,CAAC,CAACkB,UAAU,CAAC,CAAE,IAAG,IAAIlB,IAAI,CAAC,CAAC,CAACgB,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAK,EAAC,CAACP,IAAI,CAAC;QAAC,CAAC,CAAC;QAClMZ,WAAW,CAAC,EAAE,CAAC;MACjB,CAAC,CAAC,OAAOsB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF,CAAC;EAED,oBACE1B,OAAA;IAAM4B,QAAQ,EAAEf,YAAa;IAAAgB,QAAA,eAE3B7B,OAAA;MAAQ8B,SAAS,EAAC,iBAAiB;MAACC,IAAI,EAAC,QAAQ;MAAAF,QAAA,EAAC;IAEhD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEX,CAAC;AAACjC,EAAA,CAhCID,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}